imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @InsaLanNewsBundle/Resources/config/admin.yml }
    - { resource: @InsaLanPizzaBundle/Resources/config/admin.yml }
    - { resource: @InsaLanTournamentBundle/Resources/config/services.yml }
    - { resource: @InsaLanBundle/Resources/config/services.yml }
    - { resource: @InsaLanUserBundle/Resources/config/services.yml }
    - { resource: @InsaLanArchivesBundle/Resources/config/services.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'InsaLanBundle:Form:fields.html.twig'
    globals:
        ga_tracking: "%ga_tracking%"
    paths:
        %kernel.root_dir%/../vendor/payum/core/Payum/Core/Resources/views: PayumCore

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:
        - InsaLanBundle
        - InsaLanStreamBundle
        - InsaLanNewsBundle
        - InsaLanTournamentBundle
        - InsaLanPizzaBundle
        - InsaLanInformationBundle
        - InsaLanArchivesBundle

    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
            enum: string
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        mappings:
            gedmo_loggable:
                type: annotation
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                is_bundle: false
            gedmo_tree:
                type: annotation
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                is_bundle: false
            payum:
                is_bundle: false
                type: xml
                dir: "%kernel.root_dir%/../vendor/payum/core/Payum/Core/Bridge/Doctrine/Resources/mapping"
                prefix: Payum\Core\Model


        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true

                   
services:
    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]

    payum.buzz.client:
        class: %payum.buzz.client.class%
        calls:
            - [setTimeout, [200]]
            - [setOption, [64,false]] #CURLOPT_SSL_VERIFYPEER
            - [setOption, [81,false]] #CURLOPT_SSL_VERIFYHOST
            - [setOption, [32,4]] #CURLOPT_SSLVERSION


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# FOS User Bundle Configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: InsaLan\UserBundle\Entity\User
    from_email:
        address:        "%fos_user_email_address%"
        sender_name:    "%fos_user_email_sender_name%"
    registration:
        confirmation:
            enabled:    true # change to true for required email confirmation
            template:   FOSUserBundle:Registration:email.txt.twig

stof_doctrine_extensions:
    default_locale: %locale%
    orm:
        default:
            timestampable: true

# Sonata Admin Bundle Configuration
sonata_block:
    default_contexts: [admin]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # Your other blocks

payum:
    security:
        token_storage:
            InsaLan\UserBundle\Entity\PaymentToken: { doctrine: orm }

    storages:
        InsaLan\UserBundle\Entity\PaymentDetails: { doctrine: orm }

    contexts:
        paypal_express_checkout_and_doctrine_orm:
            paypal_express_checkout_nvp:
                username: '%paypal_express_checkout_username%'
                password: '%paypal_express_checkout_password%'
                signature: '%paypal_express_checkout_signature%'
                sandbox: '%paypal_express_checkout_sandbox%'
        offline:
            offline: ~

# Maintenance bundle config
lexik_maintenance:
    authorized:
    #   path: /path                              # Optional. Authorized path, accepts regexs
    #   host: your-domain.com                    # Optional. Authorized domain, accepts regexs
    #   ips: ['127.0.0.1', '172.123.10.14']      # Optional. Authorized ip addresses
    #   query: { foo: bar }                      # Optional. Authorized request query parameter (GET/POST)
    #   cookie: { bar: baz }                     # Optional. Authorized cookie
    #   route:                                   # Optional. Authorized route name
    #   attributes:                              # Optional. Authorized route attributes
    driver:
    #   ttl: 3600                                # Optional ttl option, can be not set

        # Database driver:
        class: 'Lexik\Bundle\MaintenanceBundle\Drivers\DatabaseDriver' # class for database driver

        # Option 1 : for doctrine
        # options: {connection: connection-name} 

    # Optional. response code and status of the maintenance page
    response:
        code: 503
        status: "Le site est actuellement en maintenance"
